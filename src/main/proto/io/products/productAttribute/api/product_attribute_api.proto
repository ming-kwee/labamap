syntax = "proto3";

package io.products.productAttribute.api;

option java_outer_classname = "ProductAttributeApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/productAttribute/domain/product_attribute_domain.proto";

service ProductAttributeService {
    option (kalix.codegen) = {
      value_entity: {
        name: "io.products.productAttribute.domain.ProductAttribute"
        entity_type: "product_attributes"
        state: "io.products.productAttribute.domain.ProductAttributeState"
      }
    };
  
    rpc CreateProductAttribute(ProductAttribute) returns (google.protobuf.Empty){
      option (google.api.http) = {
        post: "/create_product_attribute"
        body: "*"
    };
    };
    
    rpc GetProductAttribute(GetProductAttributeRequest) returns (ProductAttribute);

    rpc UpdateProductAttribute(ProductAttribute) returns (google.protobuf.Empty);

    rpc DeleteProductAttribute(DeleteProductAttributeRequest) returns (google.protobuf.Empty);

}

message ProductAttribute {
    string attribute_id = 1  [(kalix.field).entity_key = true];
    string attribute_name = 2;
    string attribute_type = 3;
}

message GetProductAttributeRequest {
    string attribute_id = 1 [(kalix.field).entity_key = true];
}
message DeleteProductAttributeRequest {
    string attribute_id = 1 [(kalix.field).entity_key = true];
}
