syntax = "proto3";

package io.products.channelAttributeValueMapping.api;

option java_outer_classname = "ChannelAttributeValueMappingApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/channelAttributeValueMapping/domain/channel_attribute_value_mapping_domain.proto";

service ChannelAttributeValueMappingService {
  option (kalix.codegen) = {
    value_entity: {
      name: "io.products.channelAttributeValueMapping.domain.ChannelAttributeValueMapping"
      entity_type: "channel_attribute_value_mapping"
      state: "io.products.channelAttributeValueMapping.domain.ChannelAttributeValueMappingState"
    }
  };

  rpc CreateChannelAttributeValueMapping(ChannelAttributeValueMapping) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/create_channel_attribute_value_mapping"
      body: "*"
    };
  };

  rpc GetChannelAttributeValueMapping(GetChannelAttributeValueMappingRequest) returns (ChannelAttributeValueMapping);

  rpc UpdateChannelAttributeValueMapping(ChannelAttributeValueMapping) returns (google.protobuf.Empty);

  rpc DeleteChannelAttributeValueMapping(DeleteChannelAttributeValueMappingRequest) returns (google.protobuf.Empty);

}

message ChannelAttributeValueMapping {
  string channel_attribute_value_map_id = 1 [(kalix.field).entity_key = true];
  string value_id = 2 ;
  string channel_id = 3;
  string value = 4;
}

message GetChannelAttributeValueMappingRequest {
  string channel_attribute_value_map_id = 1 [(kalix.field).entity_key = true];
}
message DeleteChannelAttributeValueMappingRequest {
  string channel_attribute_value_map_id = 1 [(kalix.field).entity_key = true];
}
