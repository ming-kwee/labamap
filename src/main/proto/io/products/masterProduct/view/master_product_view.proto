syntax = "proto3";

package io.products.masterProduct.view;
option java_outer_classname = "MasterProductViewModel";

import "io/products/masterProduct/domain/master_product_domain.proto";
import "io/products/masterProduct/api/master_product_api.proto";
import "google/api/annotations.proto";
import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

service MasterProductView {
    option (kalix.codegen) = {
      view: {}
    };


    rpc GetMasterProducts(ByRoleRequest) returns (stream ByRoleResponse) {
      option (kalix.method).view.query = {
        query: "SELECT * AS master_products FROM master_products where isDeleted = false"
      };
      option (google.api.http) = {
        post: "/master_products",
        body: "*"
      };
    }

    rpc ProcessMasterProductCreated(domain.MasterProductCreated) returns (api.MasterProduct) { 
      option (kalix.method).eventing.in = {
        event_sourced_entity: "master_products" 
      };
      option (kalix.method).view.update = {
        table: "master_products"
        transform_updates: true
      };
    }
  
    rpc ProcessMasterProductDeleted(domain.MasterProductDeleted) returns (api.MasterProduct) { 
      option (kalix.method).eventing.in = {
        event_sourced_entity: "master_products" 
      };
      option (kalix.method).view.update = {
        table: "master_products"
        transform_updates: true
      };
    }



    rpc IgnoreOtherEvents(google.protobuf.Any) returns (api.MasterProduct) {
      option (kalix.method).eventing.in = {
        event_sourced_entity: "master_products"
        ignore: true
       };
    };

  

  }
  
  message ByRoleRequest {
  }

  message ByRoleResponse {
    repeated api.MasterProduct master_products = 1;
  }