syntax = "proto3";

package io.products.channelAttributeMapping.view;
option java_outer_classname = "ChannelAttributeMappingViewModel";

// import "io/users/doctor/api/doctor_api.proto";
import "io/products/channelAttributeMapping/domain/channel_attribute_mapping_domain.proto";
import "google/api/annotations.proto";
import "kalix/annotations.proto";
import "google/protobuf/empty.proto";

service ChannelAttributeMappingView {
  option (kalix.codegen) = {
    view: {}
  };


  rpc GetChannelAttributeMappings(ByChannelIdRequest) returns (ByChannelIdResponse) {
    option (kalix.method).view.query = {
      query: "SELECT * AS channelattributemappings FROM channelattributemappings WHERE channelId = :channelId"
    };
    option (google.api.http) = {
      post: "/channel_attribute_mappings",
      body: "*"
    };
  }

  rpc UpdateChannelAttributeMapping(domain.ChannelAttributeMappingState) returns (domain.ChannelAttributeMappingState) {
    option (kalix.method).eventing.in = {
      value_entity: "channel_attribute_mapping"
    };
    option (kalix.method).view.update = {
      table: "channelattributemappings"
      // transform_updates: true
    };
  }


}

message ByChannelIdRequest {
  string channelId = 1;
}

message ByChannelIdResponse {
  repeated domain.ChannelAttributeMappingState channelattributemappings = 1;
}

