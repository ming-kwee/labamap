syntax = "proto3";

package io.products.metadataProperty.api;

option java_outer_classname = "MetadataPropertyApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/metadataProperty/domain/metadata_property_domain.proto";

service MetadataPropertyService {
  option (kalix.codegen) = {
    value_entity: {
      name: "io.products.metadataProperty.domain.MetadataProperty"
      type_id: "metadata_properties"
      state: "io.products.metadataProperty.domain.MetadataPropertyState"
    }
  };

  rpc CreateMetadataProperty(MetadataProperty) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/create_metadata"
      body: "*"
    };
  };

  rpc GetMetadataProperty(GetMetadataPropertyRequest) returns (MetadataProperty);

  rpc UpdateMetadataProperty(MetadataProperty) returns (google.protobuf.Empty);

  rpc DeleteMetadataProperty(DeleteMetadataPropertyRequest) returns (google.protobuf.Empty);

}

message MetadataProperty {
  string channelId = 1  [(kalix.field).id = true];
  string key = 2 [(kalix.field).id = true];
  string value = 3;
  string target = 4;
  string grouping = 5;
  string subGrouping = 6;
}

message GetMetadataPropertyRequest {
  string channelId = 1 [(kalix.field).id = true];
  string key = 2 [(kalix.field).id = true];
}
message DeleteMetadataPropertyRequest {
  string channelId = 1 [(kalix.field).id = true];
  string key = 2 [(kalix.field).id = true];
}
