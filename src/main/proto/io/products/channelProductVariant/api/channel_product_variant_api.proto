syntax = "proto3";

package io.products.channelProductVariant.api;

option java_outer_classname = "ChannelProductVariantApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/channelProductVariant/domain/channel_product_variant_domain.proto";

service ChannelProductVariantService {
  option (kalix.codegen) = {
    value_entity: {
      name: "io.products.channelProductVariant.domain.ChannelProductVariant"
      entity_type: "channel_product_variant"
      state: "io.products.channelProductVariant.domain.ChannelProductVariantState"
    }
  };

  rpc CreateChannelProductVariant(ChannelProductVariant) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/create_channel_product_variant"
      body: "*"
    };
  };

  rpc GetChannelProductVariant(GetChannelProductVariantRequest) returns (ChannelProductVariant);

  rpc UpdateChannelProductVariant(ChannelProductVariant) returns (google.protobuf.Empty);

  rpc DeleteChannelProductVariant(DeleteChannelProductVariantRequest) returns (google.protobuf.Empty);

}

message ChannelProductVariant {
  string channel_product_variant_id = 1  [(kalix.field).entity_key = true];
  string product_id = 2;
  string channel_id = 3;
  string variant_id = 4;
}

message GetChannelProductVariantRequest {
  string channel_product_variant_id = 1 [(kalix.field).entity_key = true];
}
message DeleteChannelProductVariantRequest {
  string channel_product_variant_id = 1 [(kalix.field).entity_key = true];
}
