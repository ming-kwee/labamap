syntax = "proto3";

package io.products.channelPlatform.api;

option java_outer_classname = "ChannelPlatformApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/channelPlatform/domain/channel_platform_domain.proto";

service ChannelPlatformService {
    option (kalix.codegen) = {
      value_entity: {
        name: "io.products.channelPlatform.domain.ChannelPlatform"
        entity_type: "channel_platforms"
        state: "io.products.channelPlatform.domain.ChannelPlatformState"
      }
    };
  
    rpc CreateChannelPlatform(ChannelPlatform) returns (google.protobuf.Empty){
      option (google.api.http) = {
        post: "/create_channel"
        body: "*"
    };
    };
    
    rpc GetChannelPlatform(GetChannelPlatformRequest) returns (ChannelPlatform);

    rpc UpdateChannelPlatform(ChannelPlatform) returns (google.protobuf.Empty);

    rpc DeleteChannelPlatform(DeleteChannelProductRequest) returns (google.protobuf.Empty);

}

message ChannelPlatform {
    string channel_id = 1 [(kalix.field).entity_key = true];
    string channel_name = 2 ;
    string channel_endpoint = 3;
}

message GetChannelPlatformRequest {
    string channel_id = 1 [(kalix.field).entity_key = true];
}
message DeleteChannelProductRequest {
    string channel_id = 1 [(kalix.field).entity_key = true];
}
