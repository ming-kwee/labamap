syntax = "proto3";

package io.products.metadata.view;
option java_outer_classname = "MetadataViewByChannelIdAndTargetModel";

import "io/products/metadata/domain/metadata_domain.proto";
import "google/api/annotations.proto";
import "kalix/annotations.proto";
import "google/protobuf/empty.proto";

service MetadataByChannelIdAndTargetView {
  option (kalix.codegen) = {
    view: {}
  };

  rpc GetMetadataByChannelIdAndTarget(GetMetadataByChannelIdAndTargetRequest) returns (MetadataByChannelIdAndTargetResponse) {
    option (kalix.method).view.query = {
      query: "SELECT * AS metadatas FROM metadatas WHERE channelId = :channelId AND target = :target"
    };
    option (google.api.http) = {
      post: "/metadata-by-channel-and-target",
      body: "*"
    };
  }

  rpc UpdateMetadata(domain.MetadataState) returns (domain.MetadataState) {
    option (kalix.method).eventing.in = {
      value_entity: "metadatas"
    };
    option (kalix.method).view.update = {
      table: "metadatas"
      // transform_updates: true
    };
  }

}

message GetMetadataByChannelIdAndTargetRequest {
  string channelId = 1;
  string target = 2;
}

message MetadataByChannelIdAndTargetResponse {
  repeated domain.MetadataState metadatas = 1;
}

