syntax = "proto3";
package io.products.channelProduct.action;

option java_outer_classname = "ChannelProductActionApi";

import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service ChannelProductAction {
    option (kalix.codegen) = {
      action: {}
    };
  
    rpc CreateChannelProduct(ChannelProducts) returns (google.protobuf.Empty) {
      option (google.api.http) = {
          post: "/create_channel_product_impl"
          body: "*"
      };
    }
}

message ChannelProducts {
  string eventId = 1;
  repeated ChannelProduct channelProducts = 2;
}

message ChannelProduct {
  repeated ChannelAttribute channelAttributes = 1;
  repeated VariantGroup variantGroups = 2;
  repeated OptionGroup optionGroups = 3;
  repeated MetadataGroup metadataGroups = 4;
}


message ChannelAttribute {  
  string attrId = 1;
  string chnlAttrName = 2;
  string chnlAttrValue = 3;
  string chnlAttrType = 4;
  bool isCommon = 5;

}


message VariantGroup {
  repeated ChannelVariant channelVariant = 1;
}
message ChannelVariant {
  string vrntId = 1;
  string chnlVrntName = 2;
  string chnlVrntValue = 3;
  string chnlVrntType = 4;
}

message OptionGroup {
  repeated ChannelOption channelOption = 1;
}
message ChannelOption {
  string optnId = 1;
  string chnlOptnName = 2;
  string chnlOptnValue = 3;
  string chnlOptnType = 4;
}


message MetadataGroup {
  repeated ChannelMetadata channelMetadata = 1;
}
message ChannelMetadata {
  string channelId = 1;
  string key = 2;
  string value = 3;
  string target = 4;
  string grouping = 5;
  string subGrouping = 6;

}



    // rpc UpdateChannelProduct(ChannelProductApi.ChannelProduct) returns (ChannelProduct) {
    //   option (google.api.http) = {
    //       put: "/channel_product/{id}"
    //       body: "*"
    //   };
    // }

    // rpc DeleteChannelProduct(ChannelProductApi.ChannelProduct) returns (ChannelProduct) {
    //   option (google.api.http) = {
    //       put: "/channel_product/{id}/delete"
    //       body: "*"
    //   };
    // }

    // rpc OnDeleteState (google.protobuf.Empty) returns (google.protobuf.Empty) {
    //   option (kalix.method).eventing.in = {
    //     value_entity: "channel_products"
    //     handle_deletes: true // <4>
    //   };
    // }