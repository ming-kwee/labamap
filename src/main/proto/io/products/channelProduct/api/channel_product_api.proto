syntax = "proto3";

package io.products.channelProduct.api;

option java_outer_classname = "ChannelProductApi";

// import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
// import "io/products/channel_product/domain/channel_product_domain.proto";

service ChannelProductService {
    option (kalix.codegen) = {
      value_entity: {
        name: "io.products.channelProduct.domain.ChannelProduct"
        entity_type: "channel_products"
        state: "io.products.channelProduct.domain.ChannelProductState"
      }
    };
  
    rpc CreateChannelProduct(ChannelProduct) returns (google.protobuf.Empty);
    
    // rpc GetChannelProduct(GetChannelProductRequest) returns (ChannelProduct);

    // rpc UpdateChannelProduct(ChannelProduct) returns (google.protobuf.Empty);

    // rpc DeleteChannelProduct(DeleteChannelProductRequest) returns (google.protobuf.Empty);

}

message ChannelProduct {
    string id = 1;
    string product_id = 2 [(kalix.field).entity_key = true];
    string platform_id = 3;
}

message GetChannelProductRequest {
    string email = 1 [(kalix.field).entity_key = true];
}
message DeleteChannelProductRequest {
    string email = 1 [(kalix.field).entity_key = true];
}
