syntax = "proto3";

package io.products.credential.api;

option java_outer_classname = "CredentialApi";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "io/products/credential/domain/credential_domain.proto";

service CredentialService {
  option (kalix.codegen) = {
    value_entity: {
      name: "io.products.credential.domain.Credential"
      entity_type: "credentials"
      state: "io.products.credential.domain.CredentialState"
    }
  };

  rpc CreateCredential(Credential) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/create_credential"
      body: "*"
    };
  };

  rpc GetCredential(GetCredentialRequest) returns (Credential);

  rpc UpdateCredential(Credential) returns (google.protobuf.Empty);

  rpc DeleteCredential(DeleteCredentialRequest) returns (google.protobuf.Empty);

}

message Credential {
  string channelId = 1 [(kalix.field).entity_key = true];
  string key = 2 [(kalix.field).entity_key = true];
  string userId = 3 [(kalix.field).entity_key = true];
  string value = 4;
}

message GetCredentialRequest {
  string channelId = 1 [(kalix.field).entity_key = true];
  string key = 2 [(kalix.field).entity_key = true];
  string userId = 3 [(kalix.field).entity_key = true];
}
message DeleteCredentialRequest {
  string channelId = 1 [(kalix.field).entity_key = true];
  string key = 2 [(kalix.field).entity_key = true];
  string userId = 3 [(kalix.field).entity_key = true];
}
